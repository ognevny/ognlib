[package]
name = "ognlib"
version = "0.8.0"
edition = "2024"
license = "MIT OR Apache-2.0"
description = "Some code that is written to practice Rust"
authors = ["Maksim Bondarenkov"]
repository = "https://github.com/ognevnydemon/ognlib"
readme = "README.md"
rust-version = "1.85.0"

[dependencies]
cfg-if = "1.0"
fastrand = { version = "2.3", default-features = false }
num-bigint = { version = "0.4", default-features = false }
rayon = { version = "1.10", optional = true }
regex = { version = "1.11", default-features = false }
thiserror = { version = "2.0", default-features = false }

[lints.clippy]
dbg_macro = "deny"
todo = "deny"
single_range_in_vec_init = "warn"
redundant_clone = "warn"
declare_interior_mutable_const = "deny"
style = { level = "warn", priority = -1 }
assertions_on_constants = "warn"
assign_op_pattern = "warn"
blocks_in_conditions = "warn"
bool_assert_comparison = "warn"
borrow_interior_mutable_const = "warn"
box_default = "warn"
builtin_type_shadow = "warn"
byte_char_slices = "warn"
bytes_nth = "warn"
chars_last_cmp = "warn"
chars_next_cmp = "warn"
cmp_null = "warn"
collapsible_else_if = "warn"
collapsible_if = "warn"
collapsible_match = "warn"
comparison_to_empty = "warn"
default_instead_of_iter_empty = "warn"
disallowed_macros = "warn"
disallowed_methods = "warn"
disallowed_names = "warn"
disallowed_types = "warn"
doc_lazy_continuation = "warn"
doc_overindented_list_items = "warn"
double_must_use = "warn"
duplicate_underscore_argument = "warn"
err_expect = "warn"
excessive_precision = "warn"
field_reassign_with_default = "warn"
filter_map_bool_then = "warn"
fn_to_numeric_cast = "warn"
fn_to_numeric_cast_with_truncation = "warn"
for_kv_map = "warn"
from_over_into = "warn"
from_str_radix_10 = "warn"
get_first = "warn"
if_same_then_else = "warn"
implicit_saturating_add = "warn"
implicit_saturating_sub = "warn"
inconsistent_digit_grouping = "warn"
infallible_destructuring_match = "warn"
inherent_to_string = "warn"
init_numbered_fields = "warn"
into_iter_on_ref = "warn"
io_other_error = "warn"
is_digit_ascii_radix = "warn"
items_after_test_module = "warn"
iter_cloned_collect = "warn"
iter_next_slice = "warn"
iter_nth = "warn"
iter_nth_zero = "warn"
iter_skip_next = "warn"
just_underscores_and_digits = "warn"
legacy_numeric_constants = "warn"
len_without_is_empty = "warn"
len_zero = "warn"
let_and_return = "warn"
let_unit_value = "warn"
main_recursion = "warn"
manual_bits = "warn"
manual_dangling_ptr = "warn"
manual_is_ascii_check = "warn"
manual_is_finite = "warn"
manual_is_infinite = "warn"
manual_map = "warn"
manual_next_back = "warn"
manual_non_exhaustive = "warn"
manual_ok_or = "warn"
manual_pattern_char_comparison = "warn"
manual_range_contains = "warn"
manual_repeat_n = "warn"
manual_rotate = "warn"
manual_saturating_arithmetic = "warn"
manual_slice_fill = "warn"
manual_while_let_some = "warn"
map_clone = "warn"
map_collect_result_unit = "warn"
match_like_matches_macro = "warn"
match_overlapping_arm = "warn"
match_ref_pats = "warn"
match_result_ok = "warn"
mem_replace_with_default = "warn"
mem_replace_option_with_none = "warn"
mem_replace_option_with_some = "warn"
missing_enforced_import_renames = "warn"
missing_safety_doc = "warn"
mixed_attributes_style = "warn"
mixed_case_hex_literals = "warn"
module_inception = "warn"
must_use_unit = "warn"
mut_mutex_lock = "warn"
needless_borrow = "warn"
needless_borrows_for_generic_args = "warn"
needless_doctest_main = "warn"
needless_else = "warn"
needless_late_init = "warn"
needless_parens_on_range_literals = "warn"
needless_pub_self = "warn"
needless_range_loop = "warn"
needless_return = "warn"
needless_return_with_question_mark = "warn"
neg_multiply = "warn"
non_minimal_cfg = "warn"
obfuscated_if_else = "warn"
ok_expect = "warn"
op_ref = "warn"
option_map_or_none = "warn"
owned_cow = "warn"
partialeq_to_none = "warn"
print_literal = "warn"
print_with_newline = "warn"
println_empty_string = "warn"
ptr_arg = "warn"
ptr_eq = "warn"
question_mark = "warn"
redundant_closure = "warn"
redundant_field_names = "warn"
redundant_pattern = "warn"
redundant_pattern_matching = "warn"
redundant_static_lifetimes = "warn"
result_map_or_into_option = "warn"
result_unit_err = "warn"
same_item_push = "warn"
self_named_constructors = "warn"
should_implement_trait = "warn"
single_char_add_str = "warn"
single_component_path_imports = "warn"
single_match = "warn"
string_extend_chars = "warn"
tabs_in_doc_comments = "warn"
to_digit_is_some = "warn"
to_string_trait_impl = "warn"
toplevel_ref_arg = "warn"
trim_split_whitespace = "warn"
unnecessary_fallible_conversions = "warn"
unnecessary_fold = "warn"
unnecessary_lazy_evaluations = "warn"
unnecessary_map_or = "warn"
unnecessary_mut_passed = "warn"
unnecessary_owned_empty_strings = "warn"
unneeded_struct_pattern = "warn"
unsafe_removed_from_name = "warn"
unused_enumerate_index = "warn"
unused_unit = "warn"
unusual_byte_groupings = "warn"
unwrap_or_default = "warn"
upper_case_acronyms = "warn"
while_let_on_iterator = "warn"
write_literal = "warn"
write_with_newline = "warn"
writeln_empty_string = "warn"
wrong_self_convention = "warn"
zero_ptr = "warn"
type_complexity = "warn"
new_ret_no_self = "warn"
let_underscore_future = "warn"
new_without_default = "warn"
too_many_arguments = "warn"
large_enum_variant = "warn"
enum_variant_names = "warn"

[features]
default = ["std"]
std = ["rayon", "regex/default"]
